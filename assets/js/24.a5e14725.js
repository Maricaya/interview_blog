(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{381:function(e,t,a){"use strict";a.r(t);var _=a(42),v=Object(_.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"跨域问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#跨域问题"}},[e._v("#")]),e._v(" 跨域问题")]),e._v(" "),a("h2",{attrs:{id:"同源策略"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#同源策略"}},[e._v("#")]),e._v(" 同源策略")]),e._v(" "),a("p",[e._v("协议/主机/端口")]),e._v(" "),a("h2",{attrs:{id:"cors-跨域资源共享"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cors-跨域资源共享"}},[e._v("#")]),e._v(" "),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Access_control_CORS",target:"_blank",rel:"noopener noreferrer"}},[e._v("CORS 跨域资源共享"),a("OutboundLink")],1)]),e._v(" "),a("ul",[a("li",[a("p",[e._v("每一次请求，浏览器必须先以 "),a("code",[e._v("OPTIONS")]),e._v(" 请求方式发送一个预请求（也不是所有请求都会发送 options，展开介绍 点我）")]),e._v(" "),a("ul",[a("li",[e._v("比如一些简单请求是不需要的 比如"),a("code",[e._v("get")]),e._v("请求，但也不是所有的 "),a("code",[e._v("get")]),e._v("请求都不会发"),a("code",[e._v("options")]),e._v(", Content-Type/Header 是特定的几种。")])])]),e._v(" "),a("li",[a("p",[e._v("通过预检请求从而获知服务器端对跨源请求支持的 "),a("code",[e._v("HTTP")]),e._v(" 方法。在确认服务器允许该跨源请求的情况下，再以实际的 "),a("code",[e._v("HTTP")]),e._v(" 请求方法发送那个真正的请求。")])])]),e._v(" "),a("h2",{attrs:{id:"代理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#代理"}},[e._v("#")]),e._v(" 代理")]),e._v(" "),a("p",[e._v("在 "),a("code",[e._v("dev")]),e._v(" 开发模式下可以下使用 "),a("code",[e._v("webpack")]),e._v(" 的 "),a("code",[e._v("proxy")]),e._v(" 使用也是很方便。")]),e._v(" "),a("p",[e._v("在生产环境中需要使用 "),a("code",[e._v("nginx")]),e._v(" 进行反向代理。")]),e._v(" "),a("p",[e._v("不管是 proxy 和 nginx 的原理都是一样的，通过搭建一个中转服务器来转发请求规避跨域的问题。")]),e._v(" "),a("h2",{attrs:{id:"jsonp"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jsonp"}},[e._v("#")]),e._v(" "),a("a",{attrs:{href:"https://maricaya.github.io/interview_blog/ajax/ajax.html#jsonp",target:"_blank",rel:"noopener noreferrer"}},[e._v("jsonp"),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("很简单，就是利用 "),a("code",[e._v("<script>")]),e._v(" 标签没有跨域限制的“漏洞”（历史遗迹啊）来达到与第三方通讯的目的。")]),e._v(" "),a("ul",[a("li",[a("p",[e._v("当需要通讯时，本站脚本创建一个 "),a("code",[e._v("<script>")]),e._v(" 元素，地址指向第三方的API网址，")]),e._v(" "),a("ul",[a("li",[e._v("形如：     "),a("code",[e._v('<script src="http://www.example.net/api?param1=1&param2=2"><\/script>')])]),e._v(" "),a("li",[e._v("并提供一个回调函数来接收数据（函数名可约定，或通过地址参数传递）。")])])]),e._v(" "),a("li",[a("p",[e._v("第三方产生的响应为 json 数据的包装（故称之为jsonp，即json padding)")]),e._v(" "),a("ul",[a("li",[e._v("形如："),a("code",[e._v('callback({"name":"hax","gender":"Male"})')])]),e._v(" "),a("li",[e._v("这样浏览器会调用 "),a("code",[e._v("callback")]),e._v(" 函数，并传递解析后json对象作为参数。")])])])]),e._v(" "),a("h2",{attrs:{id:"postmessage"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#postmessage"}},[e._v("#")]),e._v(" postMessage")])])}),[],!1,null,null,null);t.default=v.exports}}]);